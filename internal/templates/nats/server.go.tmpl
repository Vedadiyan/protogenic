// Code generated by protogenic. DO NOT EDIT.

package {{ .Package }}

import "github.com/nats-io/nats.go"

//go:generate autopilot microservice -n {{ .Name | ToPascalCase }} -t {{ .Logger }} -p {{ .Name | ToLowerCase }} --request {{ .Request }} --response {{ .Response }} -o $GOGEN_PACKAGE
func {{ .Name | ToPascalCase }}Server (conn *nats.EncodedConn, srv {{ .Name | ToPascalCase }} {{ if .Logger }}, logger func(err error) {{ end }}) (*nats.subscription, error) { 
	subs, err := {{ if .Queue }} conn.QueueSubscribe {{ else }} conn.Subscribe {{ end }}("{{ .Namespace | ToLowerCase }}" {{ if .Queue }}, "{{ .Queue | ToLowerCase }}" {{ end }}, func(subject string, reply string, rq *{{ .Request | ToPascalCase }}) {
		go func() {
			rs, err := srv(rq)
			if err != nil {
				{{ if .Logger }}logger(err){{ end }}
				return
			}
			{{ if .Logger }}err = conn.Publish(reply, rs)
			if err != nil {
				logger(err)
			}{{ else }}conn.Publish(reply, rs){{ end }}
		}()
	})
	return subs, err
}