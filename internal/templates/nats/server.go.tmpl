// Code generated by protogenic. DO NOT EDIT.

package {{ .Package }}

import "github.com/nats-io/nats.go"

{{- range $x := .NatsServices}}
//go:generate autopilot microservice create -s {{ $x.Name | ToPascalCase }} -t {{ $x.Logger }} -p {{ $x.Name | ToLowerCase }} --request {{ $x.Request }} --response {{ $x.Response }} --import-path $GOGEN_PACKAGE
func {{ $x.Name | ToPascalCase }}Server (conn *nats.EncodedConn, srv {{ $x.Name | ToPascalCase }} {{ if $x.Logger }}, logger func(err error) {{ end }}) (*nats.Subscription, error) { 
	subs, err := {{ if $x.Queue }} conn.QueueSubscribe {{ else }} conn.Subscribe {{ end }}("{{ $x.Namespace | ToLowerCase }}" {{ if $x.Queue }}, "{{ $x.Queue | ToLowerCase }}" {{ end }}, func(subject string, reply string, rq *{{ $x.Request | ToPascalCase }}) {
		go func() {
			rs, err := srv(rq)
			if err != nil {
				{{ if $x.Logger }}logger(err){{ end }}
				return
			}
			{{ if $x.Logger }}err = conn.Publish(reply, rs)
			if err != nil {
				logger(err)
			}{{ else }}conn.Publish(reply, rs){{ end }}
		}()
	})
	return subs, err
}
{{- end }}